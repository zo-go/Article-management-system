// <auto-generated />
using System;
using Microsoft.EntityFrameworkCore;
using Microsoft.EntityFrameworkCore.Infrastructure;
using Microsoft.EntityFrameworkCore.Storage.ValueConversion;
using Npgsql.EntityFrameworkCore.PostgreSQL.Metadata;
using WebAPI.Infrastructure.Persistence;

#nullable disable

namespace WebAPI.Infrastructure.Migrations
{
    [DbContext(typeof(WebAPIDbContext))]
    partial class WebAPIDbContextModelSnapshot : ModelSnapshot
    {
        protected override void BuildModel(ModelBuilder modelBuilder)
        {
#pragma warning disable 612, 618
            modelBuilder
                .HasAnnotation("ProductVersion", "6.0.6")
                .HasAnnotation("Relational:MaxIdentifierLength", 63);

            NpgsqlModelBuilderExtensions.UseIdentityByDefaultColumns(modelBuilder);

            modelBuilder.Entity("WebAPI.Domain.Entity.AppArticle", b =>
                {
                    b.Property<Guid>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("uuid")
                        .HasColumnName("id")
                        .HasColumnOrder(0);

                    b.Property<Guid>("AppArticleClassId")
                        .HasColumnType("uuid")
                        .HasColumnName("app_article_class_id")
                        .HasColumnOrder(5);

                    b.Property<Guid>("AppUserId")
                        .HasColumnType("uuid")
                        .HasColumnName("app_user_id")
                        .HasColumnOrder(6);

                    b.Property<string>("ArticleContent")
                        .HasColumnType("text")
                        .HasColumnName("article_content")
                        .HasColumnOrder(3);

                    b.Property<long>("ArticlePraise")
                        .HasColumnType("bigint")
                        .HasColumnName("article_praise")
                        .HasColumnOrder(7);

                    b.Property<string>("ArticleSecondTitle")
                        .HasColumnType("text")
                        .HasColumnName("article_second_title")
                        .HasColumnOrder(2);

                    b.Property<string>("ArticleTitle")
                        .IsRequired()
                        .HasColumnType("text")
                        .HasColumnName("article_title")
                        .HasColumnOrder(1);

                    b.Property<long>("CommentsNumber")
                        .HasColumnType("bigint");

                    b.Property<DateTime>("CreatedAt")
                        .HasColumnType("timestamp with time zone")
                        .HasColumnName("created_at")
                        .HasColumnOrder(101);

                    b.Property<Guid?>("CreatedBy")
                        .HasColumnType("uuid")
                        .HasColumnName("created_by")
                        .HasColumnOrder(103);

                    b.Property<int>("DisplayOrder")
                        .HasColumnType("integer")
                        .HasColumnName("display_order")
                        .HasColumnOrder(107);

                    b.Property<string>("Document")
                        .HasColumnType("text")
                        .HasColumnName("document")
                        .HasColumnOrder(4);

                    b.Property<bool>("IsActived")
                        .HasColumnType("boolean")
                        .HasColumnName("is_actived")
                        .HasColumnOrder(105);

                    b.Property<bool>("IsDeleted")
                        .HasColumnType("boolean")
                        .HasColumnName("is_deleted")
                        .HasColumnOrder(106);

                    b.Property<string>("Remarks")
                        .HasMaxLength(800)
                        .HasColumnType("character varying(800)")
                        .HasColumnName("remarks")
                        .HasColumnOrder(108);

                    b.Property<DateTime>("UpdatedAt")
                        .HasColumnType("timestamp with time zone")
                        .HasColumnName("updated_at")
                        .HasColumnOrder(102);

                    b.Property<Guid?>("UpdatedBy")
                        .HasColumnType("uuid")
                        .HasColumnName("updated_by")
                        .HasColumnOrder(104);

                    b.Property<long>("viewstsNumber")
                        .HasColumnType("bigint");

                    b.HasKey("Id");

                    b.HasIndex("AppArticleClassId");

                    b.HasIndex("AppUserId");

                    b.ToTable("app_article", (string)null);
                });

            modelBuilder.Entity("WebAPI.Domain.Entity.AppArticleClass", b =>
                {
                    b.Property<Guid>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("uuid")
                        .HasColumnName("id")
                        .HasColumnOrder(0);

                    b.Property<string>("AppArticleClassName")
                        .HasColumnType("text")
                        .HasColumnName("app_article_classname")
                        .HasColumnOrder(1);

                    b.Property<DateTime>("CreatedAt")
                        .HasColumnType("timestamp with time zone")
                        .HasColumnName("created_at")
                        .HasColumnOrder(101);

                    b.Property<Guid?>("CreatedBy")
                        .HasColumnType("uuid")
                        .HasColumnName("created_by")
                        .HasColumnOrder(103);

                    b.Property<int>("DisplayOrder")
                        .HasColumnType("integer")
                        .HasColumnName("display_order")
                        .HasColumnOrder(107);

                    b.Property<bool>("IsActived")
                        .HasColumnType("boolean")
                        .HasColumnName("is_actived")
                        .HasColumnOrder(105);

                    b.Property<bool>("IsDeleted")
                        .HasColumnType("boolean")
                        .HasColumnName("is_deleted")
                        .HasColumnOrder(106);

                    b.Property<string>("Remarks")
                        .HasMaxLength(800)
                        .HasColumnType("character varying(800)")
                        .HasColumnName("remarks")
                        .HasColumnOrder(108);

                    b.Property<DateTime>("UpdatedAt")
                        .HasColumnType("timestamp with time zone")
                        .HasColumnName("updated_at")
                        .HasColumnOrder(102);

                    b.Property<Guid?>("UpdatedBy")
                        .HasColumnType("uuid")
                        .HasColumnName("updated_by")
                        .HasColumnOrder(104);

                    b.HasKey("Id");

                    b.ToTable("app_article_class", (string)null);
                });

            modelBuilder.Entity("WebAPI.Domain.Entity.AppAuditLog", b =>
                {
                    b.Property<Guid>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("uuid")
                        .HasColumnName("id")
                        .HasColumnOrder(0);

                    b.Property<string>("BrowserInfo")
                        .HasColumnType("text")
                        .HasColumnName("browser_info")
                        .HasColumnOrder(2);

                    b.Property<string>("ClientIpAddress")
                        .HasColumnType("text")
                        .HasColumnName("client_ip_address")
                        .HasColumnOrder(4);

                    b.Property<string>("ClientName")
                        .HasColumnType("text")
                        .HasColumnName("client_name")
                        .HasColumnOrder(3);

                    b.Property<DateTime>("CreatedAt")
                        .HasColumnType("timestamp with time zone")
                        .HasColumnName("created_at")
                        .HasColumnOrder(101);

                    b.Property<Guid?>("CreatedBy")
                        .HasColumnType("uuid")
                        .HasColumnName("created_by")
                        .HasColumnOrder(103);

                    b.Property<string>("CustomData")
                        .HasColumnType("text")
                        .HasColumnName("custom_data")
                        .HasColumnOrder(11);

                    b.Property<int>("DisplayOrder")
                        .HasColumnType("integer")
                        .HasColumnName("display_order")
                        .HasColumnOrder(107);

                    b.Property<string>("Exception")
                        .HasColumnType("text")
                        .HasColumnName("exception")
                        .HasColumnOrder(8);

                    b.Property<int>("ExecutionDuration")
                        .HasColumnType("integer")
                        .HasColumnName("execution_duration")
                        .HasColumnOrder(5);

                    b.Property<DateTime>("ExecutionTime")
                        .HasColumnType("timestamp with time zone")
                        .HasColumnName("execution_time")
                        .HasColumnOrder(6);

                    b.Property<bool>("IsActived")
                        .HasColumnType("boolean")
                        .HasColumnName("is_actived")
                        .HasColumnOrder(105);

                    b.Property<bool>("IsDeleted")
                        .HasColumnType("boolean")
                        .HasColumnName("is_deleted")
                        .HasColumnOrder(106);

                    b.Property<string>("MethodName")
                        .HasColumnType("text");

                    b.Property<string>("Parameters")
                        .HasColumnType("text")
                        .HasColumnName("parameters")
                        .HasColumnOrder(1);

                    b.Property<string>("Remarks")
                        .HasMaxLength(800)
                        .HasColumnType("character varying(800)")
                        .HasColumnName("remarks")
                        .HasColumnOrder(108);

                    b.Property<string>("ReturnValue")
                        .HasColumnType("text")
                        .HasColumnName("return_value")
                        .HasColumnOrder(7);

                    b.Property<string>("ServiceName")
                        .HasColumnType("text")
                        .HasColumnName("service_name")
                        .HasColumnOrder(9);

                    b.Property<DateTime>("UpdatedAt")
                        .HasColumnType("timestamp with time zone")
                        .HasColumnName("updated_at")
                        .HasColumnOrder(102);

                    b.Property<Guid?>("UpdatedBy")
                        .HasColumnType("uuid")
                        .HasColumnName("updated_by")
                        .HasColumnOrder(104);

                    b.Property<string>("UserInfo")
                        .HasColumnType("text")
                        .HasColumnName("user_info")
                        .HasColumnOrder(10);

                    b.HasKey("Id");

                    b.ToTable("app_audit_log", (string)null);
                });

            modelBuilder.Entity("WebAPI.Domain.Entity.AppComment", b =>
                {
                    b.Property<Guid>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("uuid")
                        .HasColumnName("id")
                        .HasColumnOrder(0);

                    b.Property<Guid>("AppArticleId")
                        .HasColumnType("uuid")
                        .HasColumnName("app_Article_id")
                        .HasColumnOrder(4);

                    b.Property<Guid>("AppUserId")
                        .HasColumnType("uuid")
                        .HasColumnName("app_user_id")
                        .HasColumnOrder(3);

                    b.Property<string>("CommentContent")
                        .HasColumnType("text")
                        .HasColumnName("comment_content")
                        .HasColumnOrder(2);

                    b.Property<DateTime>("CreatedAt")
                        .HasColumnType("timestamp with time zone")
                        .HasColumnName("created_at")
                        .HasColumnOrder(101);

                    b.Property<Guid?>("CreatedBy")
                        .HasColumnType("uuid")
                        .HasColumnName("created_by")
                        .HasColumnOrder(103);

                    b.Property<int>("DisplayOrder")
                        .HasColumnType("integer")
                        .HasColumnName("display_order")
                        .HasColumnOrder(107);

                    b.Property<bool>("IsActived")
                        .HasColumnType("boolean")
                        .HasColumnName("is_actived")
                        .HasColumnOrder(105);

                    b.Property<bool>("IsDeleted")
                        .HasColumnType("boolean")
                        .HasColumnName("is_deleted")
                        .HasColumnOrder(106);

                    b.Property<string>("Remarks")
                        .HasMaxLength(800)
                        .HasColumnType("character varying(800)")
                        .HasColumnName("remarks")
                        .HasColumnOrder(108);

                    b.Property<DateTime>("UpdatedAt")
                        .HasColumnType("timestamp with time zone")
                        .HasColumnName("updated_at")
                        .HasColumnOrder(102);

                    b.Property<Guid?>("UpdatedBy")
                        .HasColumnType("uuid")
                        .HasColumnName("updated_by")
                        .HasColumnOrder(104);

                    b.Property<Guid>("UserCommentId")
                        .HasColumnType("uuid")
                        .HasColumnName("user_comment_id")
                        .HasColumnOrder(1);

                    b.HasKey("Id");

                    b.HasIndex("AppUserId");

                    b.ToTable("app_comment", (string)null);
                });

            modelBuilder.Entity("WebAPI.Domain.Entity.AppExceptionLog", b =>
                {
                    b.Property<Guid>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("uuid")
                        .HasColumnName("id")
                        .HasColumnOrder(0);

                    b.Property<DateTime>("CreatedAt")
                        .HasColumnType("timestamp with time zone")
                        .HasColumnName("created_at")
                        .HasColumnOrder(101);

                    b.Property<Guid?>("CreatedBy")
                        .HasColumnType("uuid")
                        .HasColumnName("created_by")
                        .HasColumnOrder(103);

                    b.Property<int>("DisplayOrder")
                        .HasColumnType("integer")
                        .HasColumnName("display_order")
                        .HasColumnOrder(107);

                    b.Property<string>("FullMessage")
                        .IsRequired()
                        .HasColumnType("text")
                        .HasColumnName("full_message")
                        .HasColumnOrder(2);

                    b.Property<bool>("IsActived")
                        .HasColumnType("boolean")
                        .HasColumnName("is_actived")
                        .HasColumnOrder(105);

                    b.Property<bool>("IsDeleted")
                        .HasColumnType("boolean")
                        .HasColumnName("is_deleted")
                        .HasColumnOrder(106);

                    b.Property<string>("Remarks")
                        .HasMaxLength(800)
                        .HasColumnType("character varying(800)")
                        .HasColumnName("remarks")
                        .HasColumnOrder(108);

                    b.Property<string>("ShortMessage")
                        .IsRequired()
                        .HasColumnType("text")
                        .HasColumnName("short_message")
                        .HasColumnOrder(1);

                    b.Property<DateTime>("UpdatedAt")
                        .HasColumnType("timestamp with time zone")
                        .HasColumnName("updated_at")
                        .HasColumnOrder(102);

                    b.Property<Guid?>("UpdatedBy")
                        .HasColumnType("uuid")
                        .HasColumnName("updated_by")
                        .HasColumnOrder(104);

                    b.HasKey("Id");

                    b.ToTable("app_exception_log", (string)null);
                });

            modelBuilder.Entity("WebAPI.Domain.Entity.AppFileInformation", b =>
                {
                    b.Property<Guid>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("uuid")
                        .HasColumnName("id")
                        .HasColumnOrder(0);

                    b.Property<DateTime>("CreatedAt")
                        .HasColumnType("timestamp with time zone")
                        .HasColumnName("created_at")
                        .HasColumnOrder(101);

                    b.Property<Guid?>("CreatedBy")
                        .HasColumnType("uuid")
                        .HasColumnName("created_by")
                        .HasColumnOrder(103);

                    b.Property<string>("CurrentFileName")
                        .IsRequired()
                        .HasMaxLength(2000)
                        .HasColumnType("character varying(2000)")
                        .HasColumnName("current_file_name")
                        .HasColumnOrder(2);

                    b.Property<int>("DisplayOrder")
                        .HasColumnType("integer")
                        .HasColumnName("display_order")
                        .HasColumnOrder(107);

                    b.Property<long>("FileSize")
                        .HasColumnType("bigint")
                        .HasColumnName("file_size")
                        .HasColumnOrder(4);

                    b.Property<string>("FileType")
                        .IsRequired()
                        .HasMaxLength(2000)
                        .HasColumnType("character varying(2000)")
                        .HasColumnName("file_type")
                        .HasColumnOrder(5);

                    b.Property<bool>("IsActived")
                        .HasColumnType("boolean")
                        .HasColumnName("is_actived")
                        .HasColumnOrder(105);

                    b.Property<bool>("IsDeleted")
                        .HasColumnType("boolean")
                        .HasColumnName("is_deleted")
                        .HasColumnOrder(106);

                    b.Property<string>("OriginFileName")
                        .IsRequired()
                        .HasMaxLength(2000)
                        .HasColumnType("character varying(2000)")
                        .HasColumnName("origin_file_name")
                        .HasColumnOrder(1);

                    b.Property<string>("RelativePath")
                        .IsRequired()
                        .HasMaxLength(2000)
                        .HasColumnType("character varying(2000)")
                        .HasColumnName("relative_path")
                        .HasColumnOrder(3);

                    b.Property<string>("Remarks")
                        .HasMaxLength(800)
                        .HasColumnType("character varying(800)")
                        .HasColumnName("remarks")
                        .HasColumnOrder(108);

                    b.Property<DateTime>("UpdatedAt")
                        .HasColumnType("timestamp with time zone")
                        .HasColumnName("updated_at")
                        .HasColumnOrder(102);

                    b.Property<Guid?>("UpdatedBy")
                        .HasColumnType("uuid")
                        .HasColumnName("updated_by")
                        .HasColumnOrder(104);

                    b.HasKey("Id");

                    b.ToTable("app_file_information", (string)null);
                });

            modelBuilder.Entity("WebAPI.Domain.Entity.AppIdentityUser", b =>
                {
                    b.Property<Guid>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("uuid")
                        .HasColumnName("id")
                        .HasColumnOrder(0);

                    b.Property<DateTime>("CreatedAt")
                        .HasColumnType("timestamp with time zone")
                        .HasColumnName("created_at")
                        .HasColumnOrder(101);

                    b.Property<Guid?>("CreatedBy")
                        .HasColumnType("uuid")
                        .HasColumnName("created_by")
                        .HasColumnOrder(103);

                    b.Property<int>("DisplayOrder")
                        .HasColumnType("integer")
                        .HasColumnName("display_order")
                        .HasColumnOrder(107);

                    b.Property<bool>("IsActived")
                        .HasColumnType("boolean")
                        .HasColumnName("is_actived")
                        .HasColumnOrder(105);

                    b.Property<bool>("IsDeleted")
                        .HasColumnType("boolean")
                        .HasColumnName("is_deleted")
                        .HasColumnOrder(106);

                    b.Property<string>("RefreshToken")
                        .IsRequired()
                        .HasMaxLength(2000)
                        .HasColumnType("character varying(2000)")
                        .HasColumnName("refresh_token")
                        .HasColumnOrder(3);

                    b.Property<DateTime>("RefreshTokenExpiration")
                        .HasColumnType("timestamp with time zone")
                        .HasColumnName("refresh_token_expiration")
                        .HasColumnOrder(4);

                    b.Property<string>("Remarks")
                        .HasMaxLength(800)
                        .HasColumnType("character varying(800)")
                        .HasColumnName("remarks")
                        .HasColumnOrder(108);

                    b.Property<DateTime>("UpdatedAt")
                        .HasColumnType("timestamp with time zone")
                        .HasColumnName("updated_at")
                        .HasColumnOrder(102);

                    b.Property<Guid?>("UpdatedBy")
                        .HasColumnType("uuid")
                        .HasColumnName("updated_by")
                        .HasColumnOrder(104);

                    b.Property<Guid>("UserId")
                        .HasMaxLength(2000)
                        .HasColumnType("uuid")
                        .HasColumnName("user_id")
                        .HasColumnOrder(1);

                    b.Property<string>("Username")
                        .IsRequired()
                        .HasMaxLength(2000)
                        .HasColumnType("character varying(2000)")
                        .HasColumnName("user_name")
                        .HasColumnOrder(2);

                    b.HasKey("Id");

                    b.ToTable("app_identity_user", (string)null);
                });

            modelBuilder.Entity("WebAPI.Domain.Entity.AppRole", b =>
                {
                    b.Property<Guid>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("uuid")
                        .HasColumnName("id")
                        .HasColumnOrder(0);

                    b.Property<DateTime>("CreatedAt")
                        .HasColumnType("timestamp with time zone")
                        .HasColumnName("created_at")
                        .HasColumnOrder(101);

                    b.Property<Guid?>("CreatedBy")
                        .HasColumnType("uuid")
                        .HasColumnName("created_by")
                        .HasColumnOrder(103);

                    b.Property<int>("DisplayOrder")
                        .HasColumnType("integer")
                        .HasColumnName("display_order")
                        .HasColumnOrder(107);

                    b.Property<bool>("IsActived")
                        .HasColumnType("boolean")
                        .HasColumnName("is_actived")
                        .HasColumnOrder(105);

                    b.Property<bool>("IsDeleted")
                        .HasColumnType("boolean")
                        .HasColumnName("is_deleted")
                        .HasColumnOrder(106);

                    b.Property<string>("Remarks")
                        .HasMaxLength(800)
                        .HasColumnType("character varying(800)")
                        .HasColumnName("remarks")
                        .HasColumnOrder(108);

                    b.Property<string>("RoleName")
                        .IsRequired()
                        .HasMaxLength(2000)
                        .HasColumnType("character varying(2000)")
                        .HasColumnName("role_name")
                        .HasColumnOrder(1);

                    b.Property<DateTime>("UpdatedAt")
                        .HasColumnType("timestamp with time zone")
                        .HasColumnName("updated_at")
                        .HasColumnOrder(102);

                    b.Property<Guid?>("UpdatedBy")
                        .HasColumnType("uuid")
                        .HasColumnName("updated_by")
                        .HasColumnOrder(104);

                    b.HasKey("Id");

                    b.ToTable("app_role", (string)null);
                });

            modelBuilder.Entity("WebAPI.Domain.Entity.AppUser", b =>
                {
                    b.Property<Guid>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("uuid")
                        .HasColumnName("id")
                        .HasColumnOrder(0);

                    b.Property<string>("Avatar")
                        .HasColumnType("text")
                        .HasColumnName("avatar")
                        .HasColumnOrder(7);

                    b.Property<DateTime>("CreatedAt")
                        .HasColumnType("timestamp with time zone")
                        .HasColumnName("created_at")
                        .HasColumnOrder(101);

                    b.Property<Guid?>("CreatedBy")
                        .HasColumnType("uuid")
                        .HasColumnName("created_by")
                        .HasColumnOrder(103);

                    b.Property<int>("DisplayOrder")
                        .HasColumnType("integer")
                        .HasColumnName("display_order")
                        .HasColumnOrder(107);

                    b.Property<string>("Email")
                        .HasColumnType("text")
                        .HasColumnName("email")
                        .HasColumnOrder(5);

                    b.Property<bool>("IsActived")
                        .HasColumnType("boolean")
                        .HasColumnName("is_actived")
                        .HasColumnOrder(105);

                    b.Property<bool>("IsDeleted")
                        .HasColumnType("boolean")
                        .HasColumnName("is_deleted")
                        .HasColumnOrder(106);

                    b.Property<string>("Nickname")
                        .HasColumnType("text")
                        .HasColumnName("nickname")
                        .HasColumnOrder(8);

                    b.Property<string>("Password")
                        .IsRequired()
                        .HasColumnType("text")
                        .HasColumnName("password")
                        .HasColumnOrder(2);

                    b.Property<string>("Remarks")
                        .HasMaxLength(800)
                        .HasColumnType("character varying(800)")
                        .HasColumnName("remarks")
                        .HasColumnOrder(108);

                    b.Property<DateTime>("UpdatedAt")
                        .HasColumnType("timestamp with time zone")
                        .HasColumnName("updated_at")
                        .HasColumnOrder(102);

                    b.Property<Guid?>("UpdatedBy")
                        .HasColumnType("uuid")
                        .HasColumnName("updated_by")
                        .HasColumnOrder(104);

                    b.Property<string>("UserAddress")
                        .HasColumnType("text")
                        .HasColumnName("user_address")
                        .HasColumnOrder(6);

                    b.Property<DateTime?>("UserBirthday")
                        .HasColumnType("timestamp with time zone")
                        .HasColumnName("user_birthday")
                        .HasColumnOrder(4);

                    b.Property<string>("UserSex")
                        .HasColumnType("text")
                        .HasColumnName("user_sex")
                        .HasColumnOrder(3);

                    b.Property<string>("Username")
                        .IsRequired()
                        .HasColumnType("text")
                        .HasColumnName("username")
                        .HasColumnOrder(1);

                    b.HasKey("Id");

                    b.ToTable("app_user", (string)null);
                });

            modelBuilder.Entity("WebAPI.Domain.Entity.AppUserRole", b =>
                {
                    b.Property<Guid>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("uuid")
                        .HasColumnName("id")
                        .HasColumnOrder(0);

                    b.Property<Guid>("AppRoleId")
                        .HasMaxLength(2000)
                        .HasColumnType("uuid")
                        .HasColumnName("app_role_id")
                        .HasColumnOrder(2);

                    b.Property<Guid>("AppUserId")
                        .HasMaxLength(2000)
                        .HasColumnType("uuid")
                        .HasColumnName("app_user_id")
                        .HasColumnOrder(1);

                    b.Property<DateTime>("CreatedAt")
                        .HasColumnType("timestamp with time zone")
                        .HasColumnName("created_at")
                        .HasColumnOrder(101);

                    b.Property<Guid?>("CreatedBy")
                        .HasColumnType("uuid")
                        .HasColumnName("created_by")
                        .HasColumnOrder(103);

                    b.Property<int>("DisplayOrder")
                        .HasColumnType("integer")
                        .HasColumnName("display_order")
                        .HasColumnOrder(107);

                    b.Property<bool>("IsActived")
                        .HasColumnType("boolean")
                        .HasColumnName("is_actived")
                        .HasColumnOrder(105);

                    b.Property<bool>("IsDeleted")
                        .HasColumnType("boolean")
                        .HasColumnName("is_deleted")
                        .HasColumnOrder(106);

                    b.Property<string>("Remarks")
                        .HasMaxLength(800)
                        .HasColumnType("character varying(800)")
                        .HasColumnName("remarks")
                        .HasColumnOrder(108);

                    b.Property<DateTime>("UpdatedAt")
                        .HasColumnType("timestamp with time zone")
                        .HasColumnName("updated_at")
                        .HasColumnOrder(102);

                    b.Property<Guid?>("UpdatedBy")
                        .HasColumnType("uuid")
                        .HasColumnName("updated_by")
                        .HasColumnOrder(104);

                    b.HasKey("Id");

                    b.HasIndex("AppRoleId");

                    b.HasIndex("AppUserId");

                    b.ToTable("app_user_role", (string)null);
                });

            modelBuilder.Entity("WebAPI.Domain.Entity.AppArticle", b =>
                {
                    b.HasOne("WebAPI.Domain.Entity.AppArticleClass", "AppArticleClasses")
                        .WithMany()
                        .HasForeignKey("AppArticleClassId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("WebAPI.Domain.Entity.AppUser", "AppUsers")
                        .WithMany()
                        .HasForeignKey("AppUserId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("AppArticleClasses");

                    b.Navigation("AppUsers");
                });

            modelBuilder.Entity("WebAPI.Domain.Entity.AppComment", b =>
                {
                    b.HasOne("WebAPI.Domain.Entity.AppUser", "AppUsers")
                        .WithMany()
                        .HasForeignKey("AppUserId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("AppUsers");
                });

            modelBuilder.Entity("WebAPI.Domain.Entity.AppUserRole", b =>
                {
                    b.HasOne("WebAPI.Domain.Entity.AppRole", "AppRole")
                        .WithMany()
                        .HasForeignKey("AppRoleId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("WebAPI.Domain.Entity.AppUser", "AppUser")
                        .WithMany()
                        .HasForeignKey("AppUserId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("AppRole");

                    b.Navigation("AppUser");
                });
#pragma warning restore 612, 618
        }
    }
}
